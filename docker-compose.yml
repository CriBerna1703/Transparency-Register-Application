version: '3.8'

services:
  database:
    image: mysql:8
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: lobbistidb
      MYSQL_USER: CriBerna1703
      MYSQL_PASSWORD: transparency_register01
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backup.sql:/backup.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      timeout: 5s
    networks:
      - app_network
    entrypoint: ["/bin/sh", "-c", "docker-entrypoint.sh mysqld & sleep 10 && mysql -uCriBerna1703 -ptransparency_register01 lobbistidb < /backup.sql && wait"]


  backend:
    build:
      context: ./Web Application/backend
    container_name: node_backend
    restart: always
    environment:
      - PORT=3000
      - DB_HOST=database
      - DB_USER=CriBerna1703
      - DB_PASSWORD=transparency_register01
      - DB_NAME=lobbistidb
      - DOCKER_ENV=true
    ports:
      - "3000:3000"
    volumes:
      - ./Web Application/backend:/app
    working_dir: /app
    command: ["node", "server.js"]
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app_network

  frontend:
    build:
      context: ./Web Application/angular-frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - app_network

volumes:
  mysql_data:

networks:
  app_network:

